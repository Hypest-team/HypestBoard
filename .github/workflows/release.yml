name: Release lifecycle

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    name: Build and bump version

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn modules
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Lerna bootstrap
        run: npx lerna bootstrap

      - name: Build admin UI
        run: yarn workspace @scoreman/client build

      - name: Configure CI Git User
        run: |
          git config --global user.name '@n0namedguy'
          git config --global user.email 'n0namedguy@users.noreply.github.com'

      - name: Version bumps
        run: npx lerna version --conventional-commits --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish on npm
        run: |
          npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
          npx lerna publish from-package --yes

      - name: Build and release Electron binaries
        run: npx electron-builder -lw --publish always
        working-directory: ./packages/standalone
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

